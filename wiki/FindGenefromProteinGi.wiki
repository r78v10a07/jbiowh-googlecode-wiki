#summary This is the Find Gene from ProteinGi Command Line Tools using the Java API

= Find Gene from !ProteinGi =

The class extends the [AbstractDefaultTool] to parse the command line options. 

This Java Main class search for genes and, therefore the proteins encoded by each gene, using as ID the !ProteinGi provided by the  [http://www.ncbi.nlm.nih.gov/gene/ Gene] data source. The program reads the !ProteinGi IDs form a file provided by the option (-i). The file can have any text format with a constant field delimiter. The delimiter string is set by the option (-d), by default the class uses the space character as delimiter. Also, the position of the !ProteinGi Id has to be passed to the class using the option (-p), by default the class uses the "0" as the position for the !ProteinGi Id.      

There are two outputs using this main class. The first is obtained using the command line option (--fasta). It will return the !UniProt sequence, in fasta format, for each !ProteinGi entered in the command line. The second output is obtained when the (--fasta) option is omitted. This output require a second column in the input file with the gene type and will return a table with the PTT information plus the !UniProt protein sequence including the genes in the same chromosome in a gap of number of pair bases. The class uses the option (-n) to set the number of gene pair bases included in the gap, by default the class uses 10000 up and down the located gene of pair bases inside the gap. The second column (gene type) in the input file is used to mark the input gene in the chromosome table.

The command line options are:

    *   --fasta Print the proteins in fasta format.
    *   -i set the file with the !ProteinGi list (require argument).
    *   -n set the number of gene pair bases up and down to include in the gap (require argument, by default *10000*).
    *   -p set the position of the fields on the file. First the !ProteinGi Id and then gene type, for the second output (require argument, by default *"0" or "0,1"* for the second output)
    *   -d set the delimiter to extract the fields (require argument, by default uses *the space character*)

View [http://jbiowh.googlecode.com/svn/wiki/javadoc/org/jbiowh/tools/prototypes/gene/FindGenefromProteinGi.html JavaDoc] for this class.

View [http://jbiowh.googlecode.com/svn/trunk/src/main/java/org/jbiowh/tools/prototypes/gene/FindGenefromProteinGi.java Java file] for this class

= Examples = 

== Retrieve the !UniProt sequence in fasta format for a list of !ProteinGi ==

Use this columns as input file to search the !UniProt Id for this genes using the !ProteinGi as input Id. 

{{{
| -      | 158333234 | COG1051F | NUDIX hydrolase           |
| +      | 158333235 | NULL     | hypothetical protein      |
| +      | 158333236 | COG1397O | ADP-ribosylglycohydrolase |
| +      | 158333237 | COG4248R | hypothetical protein      |
| +      | 158333238 | NULL     | hypothetical protein      |
}}}

The !ProteinGi in this table is the column 2, (the column count start on 0) using as delimiter the "|" character. This delimiter is a special character, therefore, it have to be double escaped.  

The command line is:

{{{
java -cp /home/roberto/.m2/repository/org/jbiowh/2.0.6-SNAPSHOT/jbiowh-2.0.6-SNAPSHOT.jar org.jbiowh.tools.prototypes.gene.FindGenefromProteinGi -v -i input_file.txt --fasta -p 2 -d "\\|"
}}}

The standard output is:

http://jbiowh.googlecode.com/svn/wiki/images/tool_ex1.jpg

The *result.txt* file contains the !UniProt sequences in fasta format:

http://jbiowh.googlecode.com/svn/wiki/images/tool_ex2.jpg

== Retrieve the chromosome information included in the PTT table plus the !UniProt sequence ==

Using the same input file, the third column has gene type and the same delimiter.

{{{
java -cp /home/roberto/.m2/repository/org/jbiowh/2.0.6-SNAPSHOT/jbiowh-2.0.6-SNAPSHOT.jar org.jbiowh.tools.prototypes.gene.FindGenefromProteinGi -v -i input_file.txt  -p 2 -d "\\|" -n 5000
}}}

The standard output is:

http://jbiowh.googlecode.com/svn/wiki/images/tool_ex3.jpg

The *result.txt* file contains the !UniProt sequences in fasta format:

http://jbiowh.googlecode.com/svn/wiki/images/tool_ex4.jpg

